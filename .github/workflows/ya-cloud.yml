name: Docker Image CI

on:
  push:
    branches: ['main']
  workflow_dispatch:
    inputs:
      reason:
        description: 'why'
        required: false
        default: 'just for fun'

env:
  BACKEND_IMAGE: cr.yandex/${{ secrets.YA_REGISTRY }}/tridva-api:${{ github.sha }}
  NGINX_IMAGE: cr.yandex/${{ secrets.YA_REGISTRY }}/tridva-nginx:${{ github.sha }}

jobs:
  build-backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: 'Create env file'
        run: |
          echo "${{ secrets.ENV }}" > .env
          echo "${{ secrets.DB_CA }}" > db.pem

      - name: Login to Dockerhub
        uses: docker/login-action@v2
        with:
          registry: cr.yandex
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Backend
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./configs/deploy/Dockerfile
          push: true
          tags: ${{ env.BACKEND_IMAGE }}

  build-nginx:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Dockerhub
        uses: docker/login-action@v2
        with:
          registry: cr.yandex
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Nginx for together composing
        uses: docker/build-push-action@v3
        with:
          context: ./configs/nginx
          file: ./configs/nginx/Dockerfile
          push: true
          tags: ${{ env.NGINX_IMAGE }}

  update-yc:
    needs: [build-backend, build-nginx]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Copy docker-compose
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.YC_HOST }}
          username: ${{ secrets.YC_USERNAME }}
          key: ${{ secrets.ID_RSA }}
          source: 'configs/yc/docker-compose.yaml'
          target: '~/backend/docker-compose.yaml'

      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.YC_HOST }}
          username: ${{ secrets.YC_USERNAME }}
          key: ${{ secrets.ID_RSA }}
          script: cd ~/backend && docker compose pull && docker compose up
