name: Docker Image CI

on:
  push:
    branches: ['main']
  workflow_dispatch:
    inputs:
      reason:
        description: 'why'
        required: false
        default: 'just for fun'

env:
  BACKEND_IMAGE: cr.yandex/crpkimrjqc5g9hklf1c2/tridva-api

jobs:
  test-backend:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20.10.0'
          cache: 'npm'
      - run: npm install
      - run: npm test

  build-backend:
    needs: test-backend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: 'Create env file'
        run: |
          echo "${{ vars.ENV }}" > .env
          echo "${{ secrets.DB_CA }}" > db.pem

      - name: Login to Dockerhub
        uses: docker/login-action@v2
        with:
          registry: cr.yandex
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Backend
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./configs/deploy/Dockerfile
          push: true
          tags: ${{ env.BACKEND_IMAGE }}

  update-yc:
    needs: build-backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ vars.YC_HOST }}
          username: ${{ vars.YC_USERNAME }}
          key: ${{ secrets.ID_RSA }}
          script: |
            cd ~/frontend &&
            docker compose -f configs/yc/docker-compose.yaml stop backend && 
            docker compose -f configs/yc/docker-compose.yaml pull backend && 
            docker compose -f configs/yc/docker-compose.yaml up -d backend &&
            docker system prune -f
